#include "api.h"
#include "globals.h"
#define TRIGGER_PIN PD5
#define CRYPTO_SECRETKEYBYTES   1281
#define CRYPTO_PUBLICKEYBYTES   897
#define CRYPTO_BYTES            690
#define MESSAGE_LEN   33
//#define FALCON_ASM_CORTEXM4 1

uint8_t pk[CRYPTO_PUBLICKEYBYTES]={0x09, 0x10, 0x5C, 0x0E, 0xA5, 0x8B, 0xC9, 0xD5, 0x2C, 0xAD, 0xE1, 0x05, 0x35, 0xE6, 0xCF, 0x34, 0x50, 0x42, 0xE4, 0xCA, 0x9A, 0x1F, 0xA9, 0xD0, 0x2E, 0x00, 0x92, 0xCA, 0xCF, 0x77, 0xF9, 0x8F, 0x51, 0x47, 0x09, 0x1B, 0x9A, 0xDA, 0xC5, 0xC9, 0x3A, 0xD4, 0xE9, 0x68, 0x3E, 0x2E, 0x5A, 0x67, 0x15, 0xEB, 0x97, 0xEE, 0xC6, 0x12, 0x12, 0x82, 0xE2, 0x2E, 0xB4, 0x62, 0x49, 0x98, 0x8A, 0x7F, 0xAC, 0x02, 0x66, 0x13, 0xE1, 0xC6, 0xCF, 0x36, 0xE4, 0xBE, 0x53, 0x6A, 0x2F, 0x39, 0x3A, 0x40, 0x31, 0x69, 0x97, 0x50, 0x31, 0x55, 0x61, 0x46, 0xAB, 0xBC, 0xAB, 0x3D, 0x5F, 0xF1, 0x22, 0x41, 0xC3, 0x23, 0x1D, 0x21, 0xC0, 0x2B, 0xF7, 0x2E, 0xD9, 0x40, 0x02, 0x8A, 0x44, 0xA8, 0x09, 0x5E, 0x89, 0xBE, 0x5E, 0x57, 0x78, 0x8B, 0x12, 0x91, 0xA8, 0x4A, 0xB1, 0x0B, 0x26, 0x19, 0xE7, 0x10, 0x91, 0x67, 0xC5, 0x44, 0xAE, 0x84, 0x26, 0x84, 0xC2, 0xF3, 0x2E, 0x6C, 0xA5, 0x22, 0xF2, 0xF3, 0x0B, 0x25, 0x00, 0x4F, 0x45, 0x48, 0x22, 0xEB, 0x1D, 0x1C, 0xAD, 0x11, 0x49, 0xD9, 0xEB, 0x10, 0x49, 0x6E, 0xA6, 0x24, 0xCC, 0xCB, 0x1B, 0xAA, 0x69, 0x85, 0xCD, 0xF9, 0x84, 0x2D, 0x4C, 0x09, 0x73, 0xA5, 0x3B, 0xFA, 0xE6, 0x5F, 0x2C, 0x2E, 0xB1, 0x1D, 0xB9, 0xF6, 0x1F, 0x35, 0x82, 0x46, 0xC8, 0xF7, 0x30, 0xEB, 0xCD, 0xA9, 0x65, 0x1B, 0x25, 0x4A, 0xE9, 0x09, 0x4C, 0x9E, 0x28, 0xF1, 0x31, 0xC7, 0x1B, 0x82, 0x4A, 0xD9, 0x46, 0xDB, 0x89, 0x5E, 0x5F, 0x31, 0x64, 0x1B, 0x36, 0x6B, 0x4B, 0x0C, 0x95, 0xD6, 0x20, 0xF8, 0xDF, 0xF8, 0x82, 0x76, 0x2C, 0x69, 0xCB, 0xE0, 0x32, 0x07, 0x32, 0xCA, 0x71, 0x4B, 0xE7, 0x92, 0x0F, 0xE9, 0x8C, 0x49, 0xB9, 0x65, 0x91, 0x5C, 0xE4, 0xC7, 0x09, 0x56, 0x06, 0x47, 0x7C, 0xCC, 0xD2, 0xC4, 0xF9, 0x2B, 0x6C, 0x56, 0xD0, 0xAE, 0x88, 0xC0, 0x16, 0x0A, 0xB2, 0x9A, 0xB0, 0x9A, 0x51, 0x25, 0x7C, 0x83, 0x69, 0x40, 0x2A, 0x9C, 0xCC, 0xC6, 0x5D, 0x88, 0x4E, 0x16, 0x49, 0xC2, 0x5F, 0x95, 0x16, 0x08, 0x30, 0x3D, 0xC2, 0x55, 0x97, 0x99, 0xF3, 0x22, 0xB6, 0x1E, 0x4A, 0x05, 0xA9, 0x69, 0x20, 0x39, 0xC8, 0x2F, 0x38, 0xF8, 0x04, 0x35, 0x1B, 0xAF, 0x96, 0xA6, 0x3D, 0x2A, 0xA7, 0x0A, 0xD6, 0x4F, 0xA0, 0x1E, 0x4F, 0x20, 0x1B, 0x0A, 0x58, 0x3B, 0xC1, 0x4C, 0x47, 0xB2, 0x5C, 0x4F, 0x66, 0x82, 0xB6, 0xD6, 0xD7, 0x9E, 0xBE, 0x9D, 0x6E, 0xBD, 0xDA, 0x45, 0xCF, 0x77, 0x45, 0x90, 0x18, 0xA6, 0x32, 0x61, 0x2C, 0x59, 0x69, 0x19, 0x7B, 0x8B, 0xE1, 0x08, 0x61, 0x2E, 0x00, 0xA1, 0x54, 0x0E, 0xD5, 0x85, 0x14, 0x53, 0x26, 0x18, 0xDD, 0x26, 0x07, 0x51, 0x05, 0xF1, 0x1D, 0x92, 0xA9, 0x8C, 0x99, 0xF7, 0xB5, 0x27, 0x1C, 0xFE, 0x78, 0x55, 0x34, 0x2B, 0x32, 0xE8, 0x54, 0x6B, 0x1D, 0x8A, 0xC6, 0xA2, 0xD8, 0x16, 0xB5, 0x8A, 0x81, 0xFB, 0x8F, 0x98, 0xFB, 0x71, 0xC1, 0xF9, 0x1B, 0xDC, 0xCD, 0xC2, 0xB0, 0x3A, 0x43, 0x3A, 0xA0, 0x27, 0xB7, 0xAF, 0x6A, 0x10, 0xD1, 0x7C, 0x02, 0x1F, 0x5B, 0x2E, 0xB1, 0x64, 0x22, 0x40, 0xFA, 0x2D, 0x7D, 0xF1, 0xC4, 0xE7, 0x95, 0x26, 0x59, 0x8D, 0x1C, 0xD3, 0x3F, 0xCE, 0x9D, 0x72, 0x30, 0xF5, 0xD4, 0xFC, 0x87, 0x53, 0x6A, 0x11, 0xA1, 0x90, 0x9B, 0xD3, 0xE7, 0x19, 0x9E, 0x02, 0x43, 0x5A, 0x1E, 0x06, 0x3A, 0x0C, 0xB7, 0xD0, 0x6E, 0xC2, 0x2A, 0xAD, 0xDC, 0x04, 0xC8, 0x80, 0x6A, 0x63, 0x07, 0xB2, 0x25, 0x23, 0x4E, 0x2B, 0x1C, 0x9F, 0xBE, 0xC6, 0xF3, 0x04, 0x4F, 0xB3, 0x7E, 0x61, 0x28, 0x2B, 0x21, 0xE6, 0x91, 0x9E, 0x34, 0x50, 0x57, 0xB1, 0xED, 0x27, 0x55, 0xC0, 0xFA, 0x32, 0x61, 0x5D, 0x85, 0x37, 0xFC, 0x38, 0x32, 0x12, 0x62, 0x2E, 0x3C, 0x20, 0xE1, 0xE5, 0xE9, 0xC1, 0x9D, 0x90, 0x2C, 0x24, 0x52, 0xFA, 0x96, 0x5C, 0x82, 0x5C, 0xB5, 0xE2, 0xE1, 0x53, 0xCF, 0x65, 0xCD, 0xEA, 0x35, 0x19, 0xE9, 0x3A, 0x4C, 0x59, 0x8D, 0x37, 0x5F, 0xAD, 0xE9, 0x57, 0x1E, 0xC4, 0x66, 0x7F, 0xA9, 0x4A, 0x90, 0xA9, 0x64, 0x61, 0xAB, 0x66, 0x55, 0x3D, 0xA9, 0x29, 0xAB, 0x56, 0x8E, 0x61, 0x54, 0x00, 0x18, 0x20, 0xB2, 0xDE, 0xFB, 0x10, 0xB4, 0x2B, 0x2A, 0xCD, 0xD7, 0xEA, 0x30, 0x74, 0x18, 0xE2, 0x5F, 0x60, 0x0B, 0x9C, 0x4D, 0x48, 0x85, 0xD5, 0x9F, 0x05, 0xB2, 0xAA, 0xCD, 0xA7, 0x2D, 0x61, 0x39, 0x83, 0x6D, 0xDF, 0x69, 0xFA, 0x2A, 0x0E, 0x7C, 0x59, 0xFE, 0x00, 0x63, 0xA7, 0x2A, 0x23, 0x01, 0x9B, 0xC9, 0x0B, 0x9B, 0x82, 0x30, 0x34, 0xA2, 0x12, 0x62, 0x21, 0x5A, 0x90, 0xF6, 0xA6, 0xE8, 0xA6, 0x01, 0x36, 0x3F, 0xA9, 0xFB, 0x97, 0xBE, 0x82, 0xC5, 0x0F, 0x01, 0x8C, 0x24, 0xFE, 0x92, 0x16, 0x0A, 0xBE, 0xDA, 0xE7, 0x91, 0x91, 0x34, 0x5D, 0x58, 0x74, 0x29, 0xED, 0xE7, 0x23, 0x62, 0x68, 0x19, 0xDB, 0xA1, 0x5D, 0x69, 0x7B, 0xC4, 0xAA, 0x7B, 0x7A, 0x92, 0x34, 0x61, 0xEC, 0x2F, 0x5B, 0xA5, 0x6F, 0x2E, 0xAF, 0xF0, 0xE8, 0x12, 0xA5, 0xCF, 0x9A, 0x9F, 0x22, 0x83, 0x78, 0x29, 0x63, 0xA3, 0xBE, 0x9A, 0xDE, 0x11, 0xD4, 0x6B, 0xD2, 0x7C, 0x39, 0xC8, 0x5B, 0xA2, 0xA8, 0x0B, 0x5B, 0x6C, 0xAB, 0x82, 0x46, 0xAD, 0x72, 0xAB, 0xDE, 0x54, 0xE9, 0x08, 0x15, 0xFE, 0x22, 0x6C, 0xF6, 0xE9, 0x7F, 0x58, 0xE3, 0x7D, 0x82, 0x79, 0x68, 0xA5, 0x21, 0x6C, 0x7B, 0xF5, 0x20, 0x35, 0x05, 0xDA, 0x09, 0x5C, 0x29, 0xD2, 0xD1, 0x85, 0xC4, 0xDC, 0x0A, 0x08, 0x20, 0xD8, 0x3B, 0x87, 0xED, 0x9C, 0x78, 0xEB, 0x5B, 0x4C, 0x53, 0x1A, 0x09, 0x54, 0x98, 0x19, 0x57, 0xD8, 0x9D, 0x17, 0x70, 0x19, 0x11, 0x5B, 0x8B, 0xC8, 0x99, 0xD1, 0x53, 0xE2, 0x62, 0x23, 0xB8, 0x6F, 0xC0, 0x9F, 0x76, 0x25, 0x17, 0xC7, 0x28, 0xAA, 0x7B, 0x81, 0x54, 0xC0, 0x20, 0x31, 0xF1, 0x9A, 0x84, 0xA0, 0xDC, 0xAA, 0x6F, 0xBA, 0x44, 0x52, 0xA7, 0x2D, 0xC2, 0x24, 0xD4, 0xF1, 0xE6, 0x1D, 0x5C, 0xC1, 0x5D, 0x28, 0x86, 0x11, 0x12, 0x83, 0x4C, 0x69, 0x00, 0x9D, 0x35, 0xE6, 0xAC, 0x33, 0x50, 0x10, 0xF1, 0x50, 0x59, 0x4B, 0xF5, 0x33, 0x8C, 0x05, 0xA3, 0x0A, 0x4A, 0xBB, 0x02, 0x04, 0x4A, 0xE8, 0x5E, 0x52, 0x5B, 0x2D, 0xBA, 0x28, 0xC2, 0x0D, 0x09, 0xB4};
uint8_t sk[CRYPTO_SECRETKEYBYTES]={0x59, 0xFF, 0xFE, 0xC4, 0xF7, 0xCF, 0xBF, 0xDF, 0xF0, 0x82, 0xE4, 0x1F, 0xFB, 0x0C, 0x50, 0x40, 0x27, 0xDF, 0x7E, 0xF4, 0x00, 0xFE, 0xFB, 0xE0, 0x7E, 0xFC, 0x32, 0x7D, 0xF3, 0xFF, 0xC5, 0xE0, 0x31, 0x41, 0xCC, 0x80, 0xBE, 0x00, 0x1E, 0x7F, 0xE0, 0x4F, 0xBF, 0x0C, 0x2E, 0xC0, 0xE3, 0xFF, 0x80, 0x00, 0x0E, 0xBC, 0x14, 0x10, 0x81, 0x07, 0xD2, 0xBF, 0xE7, 0xC0, 0x81, 0xFC, 0x20, 0x42, 0x00, 0x00, 0x44, 0x07, 0x40, 0x3D, 0xF8, 0x3F, 0xB6, 0x07, 0xC0, 0x3C, 0x03, 0xEF, 0x84, 0x08, 0x3E, 0xC2, 0x14, 0x10, 0x44, 0x0B, 0xD0, 0x40, 0xFB, 0xEF, 0x7E, 0xF8, 0x2E, 0xBD, 0x18, 0x1F, 0xB9, 0x23, 0xDE, 0xC1, 0xF8, 0x1F, 0x05, 0xF3, 0x50, 0xBB, 0xFF, 0xF1, 0x42, 0x0C, 0x3E, 0x3F, 0x03, 0x80, 0xFB, 0x18, 0x60, 0x83, 0x0B, 0xF0, 0x00, 0x1C, 0x10, 0x7E, 0xFC, 0x21, 0xC1, 0xF4, 0x40, 0xF9, 0x0C, 0x1E, 0xFC, 0xFB, 0x70, 0x3B, 0xF4, 0x8F, 0x3E, 0x18, 0x01, 0xFB, 0x14, 0x3F, 0xFF, 0x08, 0x00, 0x02, 0xFB, 0xD0, 0x05, 0xF8, 0x30, 0xFA, 0x17, 0xB0, 0xC3, 0x10, 0x0F, 0xC3, 0x0F, 0xD2, 0x40, 0x07, 0xE0, 0x07, 0xF7, 0xFF, 0x80, 0xF3, 0xD0, 0xC2, 0x0B, 0xD0, 0x3E, 0x04, 0x70, 0x03, 0xF0, 0x3F, 0xC0, 0xFF, 0xC0, 0x01, 0xF4, 0x71, 0x04, 0x0C, 0x1F, 0xC3, 0xF8, 0x00, 0x7D, 0x0B, 0xEF, 0x41, 0xE8, 0x01, 0x7C, 0x13, 0xC0, 0x09, 0xF8, 0x70, 0xC1, 0x08, 0x1E, 0xC6, 0x00, 0x5E, 0x3E, 0x04, 0x2F, 0x44, 0xE8, 0x20, 0x88, 0x07, 0xDF, 0x84, 0x10, 0x4F, 0x04, 0x0C, 0x7F, 0xC4, 0xF0, 0x2F, 0xC0, 0xF8, 0x3F, 0x82, 0xFF, 0xC1, 0x7D, 0x18, 0x5F, 0xF9, 0xF0, 0x31, 0x85, 0x10, 0x41, 0x3D, 0xF7, 0xCF, 0x40, 0xE7, 0xC1, 0x3C, 0xFB, 0xDF, 0x3E, 0xF3, 0xF0, 0xFC, 0xF3, 0xBF, 0x42, 0xF4, 0x10, 0xFC, 0x07, 0xC0, 0x04, 0x0B, 0xF0, 0x3B, 0xEC, 0x61, 0x45, 0x00, 0x21, 0xC2, 0x00, 0x1E, 0x7E, 0xEB, 0x92, 0x3F, 0xF0, 0x1F, 0x7F, 0x0C, 0x40, 0xFA, 0x0B, 0xF1, 0xC8, 0xF4, 0x20, 0xC0, 0x08, 0x40, 0xBF, 0x10, 0x5E, 0x79, 0x08, 0x41, 0x03, 0x0F, 0xD0, 0x7F, 0x08, 0x4F, 0xC4, 0x0C, 0x0F, 0x82, 0xE7, 0xD0, 0x3A, 0x0C, 0x10, 0xBA, 0x0C, 0x00, 0x01, 0xEB, 0x6E, 0xBC, 0x07, 0xFF, 0xFD, 0x03, 0xFF, 0x3D, 0x18, 0x10, 0xFF, 0xF7, 0xDF, 0xC3, 0x03, 0xBE, 0xFC, 0x07, 0xF0, 0x7D, 0x10, 0x20, 0x81, 0x23, 0xC1, 0xC5, 0xE0, 0x10, 0xFE, 0x17, 0xCF, 0xFE, 0xF8, 0x1F, 0xBC, 0xEB, 0xCF, 0x44, 0xF8, 0x00, 0x40, 0xFB, 0x80, 0xC4, 0xFF, 0xF0, 0x43, 0x0F, 0x81, 0x03, 0xEF, 0xFF, 0x7F, 0x08, 0x30, 0x43, 0x0B, 0xE0, 0x81, 0x08, 0x5F, 0x42, 0x00, 0x11, 0xFE, 0x03, 0xE1, 0x3D, 0x00, 0x01, 0x03, 0x20, 0x8F, 0x88, 0x23, 0xEF, 0x01, 0xFB, 0xDF, 0xB5, 0x20, 0x0F, 0x3F, 0x03, 0xC0, 0xBD, 0xE4, 0x0F, 0xC2, 0x04, 0x00, 0x45, 0xEB, 0xB1, 0x37, 0x14, 0x3F, 0x05, 0x03, 0xEE, 0x43, 0x0C, 0x21, 0x3E, 0x00, 0x1F, 0x83, 0xEF, 0xB1, 0xBD, 0xF7, 0xFF, 0x86, 0xEF, 0xB1, 0x83, 0xFB, 0xA1, 0x44, 0x1B, 0xDF, 0x7C, 0x0B, 0xC0, 0x3E, 0x04, 0x1F, 0xBE, 0x0F, 0xE2, 0x3C, 0xF3, 0xC1, 0x79, 0xD4, 0x31, 0x3C, 0xEC, 0x10, 0xF7, 0x0C, 0x00, 0x41, 0x07, 0xE1, 0xC2, 0x04, 0x0F, 0x87, 0x04, 0x1F, 0x3F, 0x1F, 0x6F, 0xB8, 0x07, 0x80, 0x7F, 0x07, 0xF2, 0x05, 0x18, 0x10, 0x74, 0x07, 0xB0, 0xC2, 0xF8, 0x8F, 0xC7, 0x08, 0x5E, 0xBE, 0x0C, 0x3D, 0x82, 0x0C, 0x40, 0x45, 0xF3, 0xFF, 0x82, 0x04, 0x1F, 0x7D, 0x0F, 0xFE, 0x04, 0xFC, 0x00, 0x41, 0xFB, 0x9F, 0x82, 0x00, 0x10, 0x3F, 0xEB, 0xE1, 0xC3, 0x04, 0x10, 0xFD, 0xF3, 0xEE, 0xFD, 0x0C, 0x0F, 0xC6, 0x14, 0x40, 0x04, 0x0B, 0xE2, 0x89, 0xF8, 0x0E, 0x41, 0xEB, 0xFE, 0x00, 0x13, 0xEF, 0xC6, 0x0F, 0xC0, 0x7F, 0x03, 0xD2, 0x44, 0xF4, 0x0E, 0xBE, 0x04, 0x30, 0xBD, 0xF8, 0x81, 0xC4, 0x0B, 0xDF, 0xC6, 0xF8, 0x20, 0xF6, 0x17, 0xB0, 0xC0, 0xFB, 0xCF, 0x7A, 0x07, 0xF1, 0x3D, 0x0B, 0x9E, 0x7F, 0xF8, 0x40, 0x7F, 0x0B, 0xEE, 0x83, 0xF8, 0x41, 0x03, 0xF3, 0xC0, 0xBF, 0x0C, 0x4F, 0x41, 0x03, 0xF1, 0x03, 0x0F, 0xB0, 0x07, 0xF8, 0x91, 0x40, 0x04, 0x1F, 0x78, 0xF3, 0xC0, 0xFE, 0xF8, 0x20, 0x80, 0xFB, 0xAF, 0xFD, 0x1C, 0x40, 0x3B, 0xF4, 0x12, 0x41, 0x04, 0x1F, 0xBB, 0xF7, 0xBF, 0x81, 0xD7, 0xE0, 0x79, 0x07, 0x90, 0x43, 0x04, 0x00, 0xBB, 0x03, 0xE0, 0x7D, 0xEF, 0x9F, 0x7D, 0x03, 0xEF, 0xFD, 0x0F, 0x6F, 0x02, 0x10, 0x00, 0x43, 0xFF, 0xFF, 0x46, 0xFF, 0xF2, 0x41, 0x0C, 0x4F, 0x03, 0xFC, 0x1F, 0xC1, 0x1B, 0xDF, 0x83, 0x10, 0x3E, 0xFE, 0x0B, 0xD0, 0xC1, 0xF8, 0x20, 0xFE, 0x07, 0xD0, 0x3F, 0x08, 0x6F, 0x46, 0x0B, 0xED, 0xBD, 0xF0, 0x4F, 0x82, 0xEC, 0x0F, 0xFC, 0xE7, 0xA0, 0x81, 0x0F, 0xFF, 0x42, 0x04, 0x02, 0x3E, 0xEB, 0xD1, 0x44, 0x0C, 0x22, 0x7C, 0x18, 0x20, 0x05, 0xF0, 0x0F, 0x81, 0x0F, 0xEF, 0x3E, 0x04, 0x41, 0xC1, 0xEB, 0xF0, 0xBE, 0xFC, 0x2F, 0xFF, 0xF7, 0xD0, 0x83, 0x13, 0xC0, 0xC7, 0x13, 0xB2, 0xBF, 0x0F, 0xE1, 0x80, 0x08, 0x6F, 0x00, 0xDC, 0x00, 0xC0, 0xE4, 0x21, 0xBD, 0xF8, 0x4F, 0xF9, 0x17, 0xE0, 0x81, 0x03, 0xC0, 0x7E, 0xFF, 0xC0, 0xFA, 0xF8, 0x2F, 0xC4, 0x03, 0x6D, 0xC4, 0x03, 0xF0, 0x89, 0xFB, 0xBF, 0x37, 0xE3, 0xF0, 0x02, 0x2F, 0xE7, 0x11, 0x14, 0x0F, 0xFD, 0xCE, 0xF5, 0xFD, 0xFE, 0x0D, 0xFC, 0x21, 0xF4, 0xF7, 0xEB, 0x13, 0xF9, 0xF7, 0x0C, 0x00, 0x25, 0x1F, 0x23, 0xEA, 0x0F, 0xF4, 0x19, 0x05, 0x29, 0x08, 0xE8, 0xF0, 0x00, 0xED, 0x15, 0xF7, 0x10, 0xEC, 0xFC, 0xD5, 0xE2, 0x13, 0x44, 0xF2, 0xF4, 0xDF, 0x05, 0x11, 0xFF, 0x06, 0x22, 0x1A, 0xC4, 0x2F, 0xF0, 0xE2, 0xFC, 0xFA, 0x07, 0x19, 0x0F, 0x16, 0xFC, 0xDD, 0x15, 0xE8, 0x0C, 0x01, 0x04, 0x11, 0x00, 0xE2, 0x0A, 0x35, 0x14, 0xF4, 0x0E, 0x07, 0xF5, 0xCA, 0x21, 0xE9, 0xD9, 0xF8, 0x0D, 0x12, 0xF5, 0x01, 0xFE, 0xFB, 0x08, 0xEA, 0xFF, 0x12, 0xFB, 0xE0, 0x02, 0x12, 0xFD, 0x0E, 0xF6, 0x09, 0xDD, 0xF0, 0xD7, 0x11, 0xCF, 0x32, 0xEF, 0xEB, 0xD5, 0x02, 0x06, 0xFA, 0xE6, 0x26, 0xDD, 0xD6, 0xF6, 0x20, 0x08, 0xE8, 0x0C, 0x1C, 0xEC, 0x21, 0x01, 0x15, 0x0A, 0xEF, 0xF6, 0xED, 0xFB, 0xF2, 0xCA, 0x55, 0xF4, 0x06, 0x2B, 0x16, 0xFE, 0x0C, 0xE8, 0x14, 0x07, 0x0D, 0x04, 0x18, 0xF4, 0xE4, 0xC0, 0x1D, 0xE6, 0x21, 0xED, 0xF5, 0x07, 0xD9, 0x11, 0xEF, 0x06, 0xEA, 0xBB, 0x0B, 0x15, 0xE5, 0x0E, 0x08, 0x0D, 0xD8, 0x02, 0x04, 0xFD, 0xD0, 0xE4, 0xFE, 0xF5, 0x02, 0x08, 0x02, 0x16, 0x10, 0xDC, 0xF5, 0xFC, 0x2B, 0xE4, 0x2C, 0x18, 0xFA, 0xC7, 0xF7, 0xF5, 0xE6, 0xFA, 0x02, 0xE9, 0xED, 0x1C, 0xDE, 0x14, 0x1B, 0xF3, 0xE6, 0xEF, 0x0B, 0xEE, 0xDC, 0xF1, 0xE3, 0xF8, 0x0B, 0xD3, 0x14, 0x09, 0x03, 0x2E, 0x00, 0x0A, 0xF9, 0x00, 0xDF, 0x03, 0x04, 0xE5, 0x05, 0x0C, 0xEB, 0x02, 0x29, 0xE7, 0xFC, 0x0E, 0xEB, 0x10, 0xE8, 0x19, 0x30, 0xF9, 0x2A, 0xDA, 0xE8, 0xFB, 0xFA, 0x02, 0x14, 0x18, 0xFF, 0xC6, 0x28, 0x14, 0x2C, 0xDB, 0x06, 0x18, 0xF2, 0x06, 0x0F, 0x11, 0xED, 0xE3, 0xD8, 0x1C, 0xFF, 0xF6, 0xF9, 0x1C, 0xEF, 0x07, 0xDD, 0x03, 0xEB, 0x04, 0xDC, 0x15, 0x0E, 0x1D, 0x0F, 0x1B, 0xFB, 0xEE, 0xFE, 0x1D, 0xCD, 0xF9, 0x19, 0xEA, 0xCE, 0x23, 0x0B, 0xC3, 0x24, 0x1D, 0xEF, 0xE3, 0x23, 0x00, 0x0E, 0xF3, 0x2F, 0x07, 0x00, 0x0F, 0xF2, 0x38, 0xF0, 0xFD, 0xFE, 0xF0, 0xEE, 0xF1, 0xED, 0xFF, 0xF5, 0x1E, 0x23, 0x19, 0x1E, 0xC5, 0x23, 0x16, 0xDD, 0x2D, 0x1A, 0xF0, 0xF9, 0xE9, 0x3A, 0x0D, 0x05, 0x04, 0xFA, 0xF3, 0x0D, 0xE2, 0xE3, 0x07, 0x1C, 0xE1, 0xFA, 0xF6, 0xE8, 0xE7, 0x10, 0xFC, 0x1B, 0xE7, 0x00, 0xF1, 0x28, 0x14, 0xFE, 0xE6, 0x13, 0xFE, 0xE6, 0x0C, 0x15, 0x9D, 0xE6, 0x09, 0x33, 0x2A, 0xE4, 0xE7, 0x1D, 0x07, 0x0F, 0xE1, 0xFF, 0x2C, 0xF0, 0x1C, 0x1D, 0x00, 0x11, 0xFB, 0x19, 0xFC, 0xF6, 0x0F, 0x09, 0x0A, 0x0E, 0xE9, 0x18, 0x2C, 0xE5, 0x2B, 0x0F, 0x0D, 0x0D, 0xE4, 0x1A, 0x22, 0xDD, 0x14, 0x11, 0x01, 0xF4, 0x0A, 0x09, 0x09, 0xD7, 0xCF, 0x0F, 0x15, 0xE2, 0xE7, 0x05, 0x18, 0xD2, 0xF6, 0x30, 0xD1, 0x02, 0x15, 0x12, 0x0B, 0xEF, 0x01, 0xEF, 0x0D, 0x0E, 0xEB, 0x05, 0xF8, 0xE4, 0x0E, 0x09, 0x04, 0x0B, 0x09, 0x0B, 0xEC, 0x10, 0xF4, 0xD8, 0xF8, 0x02, 0x05, 0x1F, 0xEC, 0x01, 0xED, 0xEC, 0xC1, 0xF3, 0x1D, 0xA3, 0xEB, 0x27, 0xF8, 0xF0, 0xE6, 0xF0, 0x19, 0x11, 0xF7, 0xFA, 0xE7, 0xE0, 0xE4, 0x00, 0xFB, 0xCB, 0x21, 0x4B, 0xFD, 0x02, 0x0F, 0x30, 0x01, 0xF4, 0x04, 0x04, 0xF8, 0xEF, 0xEC, 0x12, 0x09, 0x0C, 0xFD, 0x0A, 0xE8, 0xF9, 0x23, 0x2A, 0x1B, 0x07, 0xFE, 0x16, 0xD0, 0xEC, 0xEF, 0xF9, 0x13, 0xCF, 0x1C, 0xE4, 0x18, 0xF7, 0x1C, 0xF3, 0xFD, 0x14, 0xF8, 0x0E, 0x04, 0x02, 0xEC};
uint8_t sig[CRYPTO_BYTES+MESSAGE_LEN+40+2]={0};
uint8_t m[MESSAGE_LEN]={0};
/*= {
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
    0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
    0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
    0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x21, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
    0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
    0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
    0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x21
};*/
uint8_t m_v[MESSAGE_LEN];
size_t siglen;
size_t mlen_v;
uint8_t in[33];

uint8_t c_bytes[4096]={0};  
uint8_t f_bytes[4096]={0};  
uint8_t t_bytes[4096]={0};  

uint8_t tempx1y1[8]={0};
uint8_t tempx0y0[8]={0};
uint8_t tempxu[8]={0};
uint8_t tempyu[8]={0};

void setup() {
  int i;
  //crypto_sign_keypair(pk,sk); fix key
  Serial.begin(115200);
  pinMode(TRIGGER_PIN, OUTPUT); 
  digitalWrite(TRIGGER_PIN, LOW);
}

void loop() {
   if (Serial.available()== 33){
    
    Serial.readBytes(m, 33);
    //digitalWrite(TRIGGER_PIN, HIGH);
    
   crypto_sign(sig,&siglen,m,MESSAGE_LEN,sk,c_bytes,f_bytes,t_bytes);
    Serial.write(m, 33);

    Serial.write(c_bytes, 4096);
    Serial.write(f_bytes, 4096);
    Serial.write(t_bytes, 4096);

  // for (int i = 0; i < 8; i++) {
  //     tempxu[7 - i] = (temp_xu >> (i * 8)) & 0xFF;
  //     tempyu[7 - i] = (temp_yu >> (i * 8)) & 0xFF;
  //     tempx0y0[7 - i] = (temp_x0y0 >> (i * 8)) & 0xFF;
  //     tempx1y1[7 - i] = (temp_x1y1 >> (i * 8)) & 0xFF;
  // }
  //   Serial.write(tempxu, 8);
  //   Serial.write(tempyu, 8);
  //   Serial.write(tempx0y0, 8);
  //   Serial.write(tempx1y1, 8);
//    Serial.write(sk, CRYPTO_SECRETKEYBYTES);
//    Serial.write(pk, CRYPTO_PUBLICKEYBYTES);
    if (crypto_sign_open(m_v, &mlen_v, sig, siglen, pk) == 0) {
    Serial.write(0x01);  
     } else {
    Serial.write(0x00);}
    //delay(100);
    //digitalWrite(TRIGGER_PIN, LOW);
    
  }

  
}
